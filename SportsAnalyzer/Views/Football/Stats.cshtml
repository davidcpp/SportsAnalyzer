@model SportsAnalyzer.Models.Statistics

@{
  ViewBag.Title = "Stats";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center mx-1 my-3 my-sm-4">Statistics</h1>

<h2 class="text-center mb-2 mb-sm-3">Basic Statistics</h2>
<div class="row mx-1 mb-4 mb-sm-5 justify-content-center">
  <div class="table-responsive-lg w-100">
    <table class="table table-bordered">
      <thead class="thead-light">
        <tr>
          <th>
            @Html.DisplayNameFor(model => model.LeagueName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.TeamName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.MatchesNumber)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.GoalsSum)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.GoalsAvg)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.GoalsAvgHome)
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            @Html.DisplayFor(model => model.LeagueName)
          </td>
          <td>
            @Html.DisplayFor(model => model.TeamName)
          </td>
          <td>
            @Html.DisplayFor(model => model.MatchesNumber)
          </td>
          <td>
            @Html.DisplayFor(model => model.GoalsSum)
          </td>
          <td>
            @Html.DisplayFor(model => model.GoalsAvg)
          </td>
          <td>
            @Html.DisplayFor(model => model.GoalsAvgHome)/@Html.DisplayFor(model => model.GoalsAvgAway)
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>

<h2 class="text-center mx-1">Goals statistics</h2>

<div class="row mx-1">
  <canvas id="myChart"></canvas>
</div>

<div class="row mx-1 mx-sm-0 mb-4 mb-sm-5 justify-content-center">

  <div class="col-8 col-sm-6 col-md-4 col-lg-3 col-form">
    <h4 class="text-center">
      Select team
    </h4>
    <hr class="hr-col" />
    <fieldset>
      <legend>
        Teams
      </legend>
      <div class="row mx-1">
        <div class="form-check col-12">
          <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="1">
          <label class="form-check-label" for="inlineCheckbox1">Team 1</label>
        </div>
        <div class="form-check col-12">
          <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="2">
          <label class="form-check-label" for="inlineCheckbox2">Team 2</label>
        </div>
        <div class="form-check col-12">
          <input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="3">
          <label class="form-check-label" for="inlineCheckbox3">Team 3</label>
        </div>
      </div>
    </fieldset>
  </div>

  <div class="col-8 col-sm-5 col-md-4 col-lg-3 col-form">
    <h4 class="text-center">
      Select rounds
    </h4>
    <hr class="hr-col" />
    @using (Html.BeginForm("Stats", "Football", FormMethod.Post, new { @class = "" }))
    {
      @Html.AntiForgeryToken()
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.LeagueName)
      @Html.HiddenFor(model => model.SeasonYear)

      <div class="form-group">
        @Html.LabelFor(model => model.RoundsSelectList,
                                          htmlAttributes: new { @class = "" })
        @Html.ListBoxFor(model => model.RoundsNumbersInts, Model.RoundsSelectList, new { @class = "form-control" })
        @Html.ValidationMessageFor(i => i.RoundsSelectList, "", new { @class = "text-warning" })
      </div>
      <input type="submit" value="Chose rounds" class="btn btn-primary btn-block" />
    }
  </div>
</div>
  @{
    double[] GoalsInIntervalsPercent = Model.GoalsInIntervalsPercent;
    double[] TimeIntervalsLimits = Model.TimeIntervalsLimits;
    string[] TimeIntervalsTexts = new string[TimeIntervalsLimits.Count() - 1];

    for (int i = 0; i < TimeIntervalsTexts.Count(); i++)
    {
      TimeIntervalsTexts[i] = TimeIntervalsLimits[i].ToString() + "-" + TimeIntervalsLimits[i + 1].ToString();
    }
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
  }

  @section Scripts
{
    <script id="mainScript" src="~/Scripts/main.js"
            data-time-intervals-all-text='@serializer.Serialize(TimeIntervalsTexts)'
            data-goals-in-intervals-percent='@serializer.Serialize(GoalsInIntervalsPercent)'></script>
  }

